%{
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include "Token.h"
char *lexeme;
int lineNumber;
%}

DIGIT [0-9]		  					   

%%
"++"|"--"|"&"				{fprintf(yyout,"\nAn unary:%s",yytext);}			
[A-Za-z][A-Za-z0-9]*[A-Za-z0-9]		{fprintf(yyout,"\nAn id:%s",yytext);}	
0|[1-9]{DIGIT}*	                   	{fprintf(yyout,"\nAn int_num:%s",yytext);}                       									
0"."{DIGIT}+|[1-9]{DIGIT}*"."{DIGIT}+   {fprintf(yyout,"\nAn real_num:%s",yytext);}	 										
"+"|"/"|"-"|"*"|"**"                    {fprintf(yyout,"\nAn operator:%s",yytext);}         
"block"|"begin"|"end"|"type"|"is"|"integer"|"real"|"array"|"of"|"when"|"do"|"default"|"end_when"|"for"|"end_for"|"malloc"|"size_of"|"free"	{fprintf(yyout,"\nAn keywords:%s",yytext);}
","|";"|":"|"["|"]"			{fprintf(yyout,"\nAn separation_signs:%s",yytext);}			 
"="					{fprintf(yyout,"\nAn assignment:%s",yytext);}				  
"^"					{fprintf(yyout,"\nAn pointer:%s",yytext);}		  
"<"|">"|"!="|">="|"<="|"=="		{fprintf(yyout,"\nAn comparison_op:%s",yytext);}

\n
.			{fprintf(yyout,"\nUnrecognized character: %s",yytext);}
                                                      
%%
void main(int argc, char* argv[])
{
yyin=fopen(argv[1],"r");
if(argv[2])  yyout=fopen(argv[2],"w");
else yyout=stdout;
yylex();
}
